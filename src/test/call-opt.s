.text
.global main
main:
stmfd sp!,{lr}
sub sp,sp,#4
mov a1,#0
mov a2,#1
bl calloc(PLT)
bl $A$f$$$A
mov a2,a1
ldr a1,=.LZ0
bl printf(PLT)
mov a1,#0
add sp,sp,#4
ldmfd sp!,{pc}
$A$f$$$A:
stmfd sp!,{lr}
sub sp,sp,#4
mov a2,#1
bl $A$f$$$A$Int
add sp,sp,#4
ldmfd sp!,{pc}
$A$f$$$A$Int:
stmfd sp!,{lr}
sub sp,sp,#4
mov a3,#2
bl $A$f$$$A$Int$Int
add sp,sp,#4
ldmfd sp!,{pc}
$A$f$$$A$Int$Int:
stmfd sp!,{lr}
sub sp,sp,#4
mov a4,#3
bl $A$f$$$A$Int$Int$Int
add sp,sp,#4
ldmfd sp!,{pc}
$A$f$$$A$Int$Int$Int:
stmfd sp!,{lr}
sub sp,sp,#4
sub sp,sp,#8
mov lr,#4
str lr,[sp,#0]
bl $A$f$$$A$Int$Int$Int$Int
add sp,sp,#8
add sp,sp,#4
ldmfd sp!,{pc}
$A$f$$$A$Int$Int$Int$Int:
stmfd sp!,{v1,lr}
ldr v1,[sp,#8]
sub sp,sp,#8
str v1,[sp,#0]
mov lr,#5
str lr,[sp,#4]
bl $A$f$$$A$Int$Int$Int$Int$Int
add sp,sp,#8
ldmfd sp!,{v1,pc}
$A$f$$$A$Int$Int$Int$Int$Int:
stmfd sp!,{v1,v2,lr}
sub sp,sp,#4
ldr v2,[sp,#16]
ldr v1,[sp,#20]
sub sp,sp,#16
str v2,[sp,#0]
str v1,[sp,#4]
mov lr,#6
str lr,[sp,#8]
bl $A$f$$$A$Int$Int$Int$Int$Int$Int
add sp,sp,#16
add sp,sp,#4
ldmfd sp!,{v1,v2,pc}
$A$f$$$A$Int$Int$Int$Int$Int$Int:
stmfd sp!,{v1,v2,v3,lr}
ldr v3,[sp,#16]
ldr v2,[sp,#20]
ldr v1,[sp,#24]
sub sp,sp,#16
str v3,[sp,#0]
str v2,[sp,#4]
str v1,[sp,#8]
mov lr,#7
str lr,[sp,#12]
bl $A$f$$$A$Int$Int$Int$Int$Int$Int$Int
add sp,sp,#16
ldmfd sp!,{v1,v2,v3,pc}
$A$f$$$A$Int$Int$Int$Int$Int$Int$Int:
stmfd sp!,{v1,v2,v3,v4,lr}
sub sp,sp,#4
ldr v4,[sp,#24]
ldr v3,[sp,#28]
ldr v2,[sp,#32]
ldr v1,[sp,#36]
sub sp,sp,#24
str v4,[sp,#0]
str v3,[sp,#4]
str v2,[sp,#8]
str v1,[sp,#12]
mov lr,#8
str lr,[sp,#16]
bl $A$f$$$A$Int$Int$Int$Int$Int$Int$Int$Int
add sp,sp,#24
add sp,sp,#4
ldmfd sp!,{v1,v2,v3,v4,pc}
$A$f$$$A$Int$Int$Int$Int$Int$Int$Int$Int:
stmfd sp!,{v1,v2,v3,v4,v5,v6,v7,lr}
mov v7,a2
mov v6,a3
mov v5,a4
ldr v4,[sp,#32]
ldr v3,[sp,#36]
ldr v2,[sp,#40]
ldr v1,[sp,#44]
ldr a2,[sp,#48]
ldr a1,=.LZ0
bl printf(PLT)
mov a2,v1
ldr a1,=.LZ0
bl printf(PLT)
mov a2,v2
ldr a1,=.LZ0
bl printf(PLT)
mov a2,v3
ldr a1,=.LZ0
bl printf(PLT)
mov a2,v4
ldr a1,=.LZ0
bl printf(PLT)
mov a2,v5
ldr a1,=.LZ0
bl printf(PLT)
mov a2,v6
ldr a1,=.LZ0
bl printf(PLT)
mov a2,v7
ldr a1,=.LZ0
bl printf(PLT)
mov a1,#0
ldmfd sp!,{v1,v2,v3,v4,v5,v6,v7,pc}
.data
.LZ0:
.asciz "%d\012"
