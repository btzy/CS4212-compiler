.text
.global main
main:
stmfd sp!,{a1,fp,lr}
sub sp,sp,#12
mov a1,#0
mov a2,#1
bl calloc(PLT)
str a1,[sp,#8]
ldr a1,[sp,#8]
bl $A$f$$$A
str a1,[sp,#4]
ldr a2,[sp,#4]
ldr a1,=.LZ0
bl printf(PLT)
mov a1,#0
add sp,sp,#16
ldmfd sp!,{fp,pc}
$A$f$$$A:
stmfd sp!,{a1,fp,lr}
sub sp,sp,#4
mov a2,#1
ldr a1,[sp,#4]
bl $A$f$$$A$Int
str a1,[sp,#0]
ldr a1,[sp,#0]
add sp,sp,#8
ldmfd sp!,{fp,pc}
$A$f$$$A$Int:
stmfd sp!,{a1,a2,fp,lr}
sub sp,sp,#8
mov a3,#2
ldr a2,[sp,#12]
ldr a1,[sp,#8]
bl $A$f$$$A$Int$Int
str a1,[sp,#4]
ldr a1,[sp,#4]
add sp,sp,#16
ldmfd sp!,{fp,pc}
$A$f$$$A$Int$Int:
stmfd sp!,{a1,a2,a3,fp,lr}
sub sp,sp,#4
mov a4,#3
ldr a3,[sp,#12]
ldr a2,[sp,#8]
ldr a1,[sp,#4]
bl $A$f$$$A$Int$Int$Int
str a1,[sp,#0]
ldr a1,[sp,#0]
add sp,sp,#16
ldmfd sp!,{fp,pc}
$A$f$$$A$Int$Int$Int:
stmfd sp!,{a1,a2,a3,a4,fp,lr}
sub sp,sp,#8
mov a1,#4
str a1,[sp,#-4]!
ldr a4,[sp,#24]
ldr a3,[sp,#20]
ldr a2,[sp,#16]
ldr a1,[sp,#12]
bl $A$f$$$A$Int$Int$Int$Int
add sp,sp,#4
str a1,[sp,#4]
ldr a1,[sp,#4]
add sp,sp,#24
ldmfd sp!,{fp,pc}
$A$f$$$A$Int$Int$Int$Int:
stmfd sp!,{a1,a2,a3,a4,fp,lr}
sub sp,sp,#8
mov a1,#5
str a1,[sp,#-4]!
ldr a1,[sp,#36]
str a1,[sp,#-4]!
ldr a4,[sp,#28]
ldr a3,[sp,#24]
ldr a2,[sp,#20]
ldr a1,[sp,#16]
bl $A$f$$$A$Int$Int$Int$Int$Int
add sp,sp,#8
str a1,[sp,#4]
ldr a1,[sp,#4]
add sp,sp,#24
ldmfd sp!,{fp,pc}
$A$f$$$A$Int$Int$Int$Int$Int:
stmfd sp!,{a1,a2,a3,a4,fp,lr}
sub sp,sp,#8
mov a1,#6
str a1,[sp,#-4]!
ldr a1,[sp,#40]
str a1,[sp,#-4]!
ldr a1,[sp,#40]
str a1,[sp,#-4]!
ldr a4,[sp,#32]
ldr a3,[sp,#28]
ldr a2,[sp,#24]
ldr a1,[sp,#20]
bl $A$f$$$A$Int$Int$Int$Int$Int$Int
add sp,sp,#12
str a1,[sp,#4]
ldr a1,[sp,#4]
add sp,sp,#24
ldmfd sp!,{fp,pc}
$A$f$$$A$Int$Int$Int$Int$Int$Int:
stmfd sp!,{a1,a2,a3,a4,fp,lr}
sub sp,sp,#8
mov a1,#7
str a1,[sp,#-4]!
ldr a1,[sp,#44]
str a1,[sp,#-4]!
ldr a1,[sp,#44]
str a1,[sp,#-4]!
ldr a1,[sp,#44]
str a1,[sp,#-4]!
ldr a4,[sp,#36]
ldr a3,[sp,#32]
ldr a2,[sp,#28]
ldr a1,[sp,#24]
bl $A$f$$$A$Int$Int$Int$Int$Int$Int$Int
add sp,sp,#16
str a1,[sp,#4]
ldr a1,[sp,#4]
add sp,sp,#24
ldmfd sp!,{fp,pc}
$A$f$$$A$Int$Int$Int$Int$Int$Int$Int:
stmfd sp!,{a1,a2,a3,a4,fp,lr}
sub sp,sp,#8
mov a1,#8
str a1,[sp,#-4]!
ldr a1,[sp,#48]
str a1,[sp,#-4]!
ldr a1,[sp,#48]
str a1,[sp,#-4]!
ldr a1,[sp,#48]
str a1,[sp,#-4]!
ldr a1,[sp,#48]
str a1,[sp,#-4]!
ldr a4,[sp,#40]
ldr a3,[sp,#36]
ldr a2,[sp,#32]
ldr a1,[sp,#28]
bl $A$f$$$A$Int$Int$Int$Int$Int$Int$Int$Int
add sp,sp,#20
str a1,[sp,#4]
ldr a1,[sp,#4]
add sp,sp,#24
ldmfd sp!,{fp,pc}
$A$f$$$A$Int$Int$Int$Int$Int$Int$Int$Int:
stmfd sp!,{a1,a2,a3,a4,fp,lr}
ldr a2,[sp,#40]
ldr a1,=.LZ0
bl printf(PLT)
ldr a2,[sp,#36]
ldr a1,=.LZ0
bl printf(PLT)
ldr a2,[sp,#32]
ldr a1,=.LZ0
bl printf(PLT)
ldr a2,[sp,#28]
ldr a1,=.LZ0
bl printf(PLT)
ldr a2,[sp,#24]
ldr a1,=.LZ0
bl printf(PLT)
ldr a2,[sp,#12]
ldr a1,=.LZ0
bl printf(PLT)
ldr a2,[sp,#8]
ldr a1,=.LZ0
bl printf(PLT)
ldr a2,[sp,#4]
ldr a1,=.LZ0
bl printf(PLT)
mov a1,#0
add sp,sp,#16
ldmfd sp!,{fp,pc}
.data
.LZ0:
.asciz "%d\012\000"
